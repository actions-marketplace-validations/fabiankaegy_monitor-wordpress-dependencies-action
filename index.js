function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var t=e(require("path")),n=require("@actions/core"),o=require("@actions/github"),r=require("@actions/exec"),s=e(require("fs")),a=e(require("pretty-bytes")),i=e(require("php-array-parser"));async function c(e){try{return await s.promises.access(e,s.constants.F_OK),!0}catch(e){}return!1}function l(e,t){let n=(e>0?"+":"")+a(e);if(0===Math.abs(e));else if(0===t)n+=" (new file)";else if(t===-e)n+=" (removed)";else{const o=Math.round(e/t*100);n+=` (${o>0?"+":""}${o}%)`}return n}function u(e,t){if(0===t)return"üÜï";const n=Math.round(e/t*100);return n>=50?"üÜò":n>=20?"üö®":n>=10?"‚ö†Ô∏è":n>=5?"üîç":n<=-50?"üèÜ":n<=-20?"üéâ":n<=-10?"üëè":n<=-5?"‚úÖ":""}function p(e){if(0==e.length)return"";for(;e.every(e=>!e[e.length-1]);)for(const t of e)t.pop();const[t]=e;let n=t.length;if(3===n&&e.every(e=>"0 B"===e[2])){n-=1;for(const t of e)t.pop()}return 0===n?"":[["Filename","Dependencies","Change",""].slice(0,n),[":---",":---:",":---:",":---:"].slice(0,n),...e].map(e=>`| ${e.join(" | ")} |`).join("\n")}function d(e){return/^(1|true|yes)$/.test(e)}function g(e,t,n){return n.indexOf(e)===t}const m=require("path"),f=require("util.promisify"),h=require("glob"),w=require("minimatch"),y=(require("fs-extra"),f(h));class b{constructor(e){const t=e||{};t.pattern=t.pattern||"**/*.asset.php",t.filename=t.filename||"size-plugin.json",t.writeFile=!1!==t.writeFile,t.filepath=m.join(process.cwd(),t.filename),t.mode=t.mode||process.env.NODE_ENV,this.options=t}filterFiles(e){const t=w.filter(this.options.pattern),n=this.options.exclude?w.filter(this.options.exclude):()=>!1;return e.filter(e=>t(e)&&!n(e))}async readFromDisk(e){const t=await y(this.options.pattern,{cwd:e,ignore:this.options.exclude}),n=await Promise.all(this.filterFiles(t).map(t=>async function(e){const{dependencies:t}=await async function(e){const t=await async function(e){return(await s.promises.readFile(e)).toString()}(e),n=await async function(e){const t=e.match(/array\(.+?(?=\;)/gm);if(!t)throw new Error("Could not find asset file array");return t[0]}(t);return i.parse(n)}(e);return t}(m.join(e,t)).catch(()=>null)));return o=n,t.reduce((e,t,n)=>(e[t]=o[n],e),{});var o}async getDiff(e,t){const n=[...Object.keys(e),...Object.keys(t)].filter(g),o=[];for(const r of n){const n=t[r]||0,s=e[r]||0,a=n.filter(e=>!s.includes(e));o.push({filename:r,dependency:n.join(", "),difference:a.join(", ")})}return o}}(async()=>{try{const e=n.getInput("repo-token"),s=o.getOctokit(e);await async function(e,o,s){const{number:i}=o.issue;try{n.debug("pr"+JSON.stringify(o.payload,null,2))}catch(e){}let g,m;if("push"==o.eventName)g=o.payload.before,m=o.payload.ref,console.log(`Pushed new commit on top of ${m} (${g})`);else{if("pull_request"!=o.eventName&&"pull_request_target"!=o.eventName)throw new Error(`Unsupported eventName in github.context: ${o.eventName}. Only "pull_request", "pull_request_target", and "push" triggered workflows are currently supported.`);{const e=o.payload.pull_request;g=e.base.sha,m=e.base.ref,console.log(`PR #${i} is targeted at ${m} (${m})`)}}n.getInput("cwd")&&process.chdir(n.getInput("cwd"));const f=new b({pattern:n.getInput("pattern")||"**/dist/**/*.asset.php",exclude:n.getInput("exclude")||"{**/*.map,**/node_modules/**}"}),h=n.getInput("build-script")||"build",w=process.cwd();let y=await c(t.resolve(w,"yarn.lock")),k=await c(t.resolve(w,"pnpm-lock.yaml")),v=await c(t.resolve(w,"package-lock.json")),x="npm",$="npm install";y?($="yarn --frozen-lockfile",x="yarn"):k?($="pnpm install --frozen-lockfile",x="pnpm"):v&&($="npm ci"),n.startGroup("[current] Install Dependencies"),console.log("Installing using "+$),await r.exec($),n.endGroup(),n.startGroup("[current] Build using "+x),console.log(`Building using ${x} run ${h}`),await r.exec(`${x} run ${h}`),n.endGroup(),await r.exec("git reset --hard");const _=await f.readFromDisk(w);n.startGroup("[base] Checkout target branch");try{if(!m)throw Error("missing context.payload.pull_request.base.ref");await r.exec("git fetch -n origin "+m),console.log("successfully fetched base.ref")}catch(e){console.log("fetching base.ref failed",e.message);try{await r.exec("git fetch -n origin "+g),console.log("successfully fetched base.sha")}catch(e){console.log("fetching base.sha failed",e.message);try{await r.exec("git fetch -n")}catch(e){console.log("fetch failed",e.message)}}}console.log("checking out and building base commit");try{if(!m)throw Error("missing context.payload.base.ref");await r.exec("git reset --hard "+m)}catch(e){await r.exec("git reset --hard "+g)}n.endGroup();const q=n.getInput("clean-script");q&&(n.startGroup(`[base] Cleanup via ${x} run ${q}`),await r.exec(`${x} run ${q}`),n.endGroup()),n.startGroup("[base] Install Dependencies"),y=await c(t.resolve(w,"yarn.lock")),k=await c(t.resolve(w,"pnpm-lock.yaml")),v=await c(t.resolve(w,"package-lock.json")),x="npm",$="npm install",y?($="yarn --frozen-lockfile",x="yarn"):k?($="pnpm install --frozen-lockfile",x="pnpm"):v&&($="npm ci"),console.log("Installing using "+$),await r.exec($),n.endGroup(),n.startGroup("[base] Build using "+x),await r.exec(`${x} run ${h}`),n.endGroup(),await r.exec("git reset --hard");const G=await f.readFromDisk(w),I=await f.getDiff(G,_);n.startGroup("Size Differences:");const D=await f.printSizes(I);console.log(D),n.endGroup();const N=function(e,{collapseUnchanged:t,omitUnchanged:n,minimumChangeThreshold:o}){let r=[],s=[];for(const i of e){const{filename:e,size:c,delta:p}=i,d=c-p,g=Math.abs(p)<o;if(g&&n)continue;const m=[`\`${e}\``,a(c),l(p,d),u(p,d)];g&&t?s.push(m):r.push(m)}let i=p(r);return 0!==s.length&&(i+=`\n\n<details><summary>‚ÑπÔ∏è <strong>View Unchanged</strong></summary>\n\n${p(s)}\n\n</details>\n\n`),i}(I,{collapseUnchanged:d(n.getInput("collapse-unchanged")),omitUnchanged:d(n.getInput("omit-unchanged"))});let j=!1;const E={...o.repo,issue_number:i},F={...E,body:N+'\n\n<a href="https://github.com/fabiankaegy/monitor-generated-wordpress-dependencies-action"><sub>monitor-generated-wordpress-dependencies-action</sub></a>'};if("pull_request"!==o.eventName&&"pull_request_target"!==o.eventName)console.log("No PR associated with this action run. Not posting a check or comment."),j=!1;else if(d(n.getInput("use-check")))if(s){const t=await async function(e,t){const n=await e.checks.create({...t.repo,name:"Monitor Generated WordPress Dependencies",head_sha:t.payload.pull_request.head.sha,status:"in_progress"});return async o=>{await e.checks.update({...t.repo,check_run_id:n.data.id,completed_at:(new Date).toISOString(),status:"completed",...o})}}(e,o);await t({conclusion:"success",output:{title:"Monitor Generated WordPress Dependencies Action",summary:N}})}else j=!0;else{let t;n.startGroup("Updating stats PR comment");try{const n=(await e.issues.listComments(E)).data;for(let e=n.length;e--;){const o=n[e];if("Bot"===o.user.type&&/<sub>monitor-generated-wordpress-dependencies-action/.test(o.body)){t=o.id;break}}}catch(e){console.log("Error checking for previous comments: "+e.message)}if(t){console.log("Updating previous comment #"+t);try{await e.issues.updateComment({...o.repo,comment_id:t,body:F.body})}catch(e){console.log("Error editing previous comment: "+e.message),t=null}}if(!t){console.log("Creating new comment");try{await e.issues.createComment(F)}catch(t){console.log("Error creating comment: "+t.message),console.log("Submitting a PR review comment instead...");try{const t=o.issue;await e.pulls.createReview({owner:t.owner,repo:t.repo,pull_number:t.number,event:"COMMENT",body:F.body})}catch(e){console.log("Error creating PR review."),j=!0}}}n.endGroup()}j&&console.log(`\n\t\t\tError: monitor-generated-wordpress-dependencies-action was unable to comment on your PR.\n\t\t\tThis can happen for PR's originating from a fork without write permissions.\n\t\t\tYou can copy the size table directly into a comment using the markdown below:\n\t\t\t\n\n${F.body}\n\n\n\t\t`.replace(/^(\t|  )+/gm,"")),console.log("All done!")}(s,o.context,e)}catch(e){n.setFailed(e.message)}})();
