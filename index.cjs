var e=require("path"),t=require("@actions/core"),n=require("@actions/github"),o=require("@actions/exec"),r=require("fs"),a=require("pretty-bytes"),s=require("php-array-parser");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var c=/*#__PURE__*/i(e),l=/*#__PURE__*/i(r),u=/*#__PURE__*/i(a),p=/*#__PURE__*/i(s);async function d(e){try{return await l.default.promises.access(e,l.default.constants.F_OK),!0}catch(e){}return!1}function f(e,t){let n=(e>0?"+":"")+u.default(e);if(0===Math.abs(e));else if(0===t)n+=" (new file)";else if(t===-e)n+=" (removed)";else{const o=Math.round(e/t*100);n+=` (${o>0?"+":""}${o}%)`}return n}function g(e,t){if(0===t)return"üÜï";const n=Math.round(e/t*100);return n>=50?"üÜò":n>=20?"üö®":n>=10?"‚ö†Ô∏è":n>=5?"üîç":n<=-50?"üèÜ":n<=-20?"üéâ":n<=-10?"üëè":n<=-5?"‚úÖ":""}function m(e){if(0==e.length)return"";for(;e.every(e=>!e[e.length-1]);)for(const t of e)t.pop();const[t]=e;let n=t.length;if(3===n&&e.every(e=>"0 B"===e[2])){n-=1;for(const t of e)t.pop()}return 0===n?"":[["Filename","Dependencies","Change",""].slice(0,n),[":---",":---:",":---:",":---:"].slice(0,n),...e].map(e=>`| ${e.join(" | ")} |`).join("\n")}function h(e){return/^(1|true|yes)$/.test(e)}function w(e,t,n){return n.indexOf(e)===t}const y=require("path"),b=require("util.promisify"),$=require("glob"),k=require("minimatch");require("fs-extra");const v=b($);class x{constructor(e){const t=e||{};t.pattern=t.pattern||"**/*.asset.php",t.filename=t.filename||"size-plugin.json",t.writeFile=!1!==t.writeFile,t.filepath=y.join(process.cwd(),t.filename),t.mode=t.mode||process.env.NODE_ENV,this.options=t}filterFiles(e){const t=k.filter(this.options.pattern),n=this.options.exclude?k.filter(this.options.exclude):()=>!1;return e.filter(e=>t(e)&&!n(e))}async readFromDisk(e){const t=await v(this.options.pattern,{cwd:e,ignore:this.options.exclude}),n=await Promise.all(this.filterFiles(t).map(t=>async function(e){const{dependencies:t}=await async function(e){const t=await async function(e){return(await l.default.promises.readFile(e)).toString()}(e),n=await async function(e){const t=e.match(/array\(.+?(?=\;)/gm);if(!t)throw new Error("Could not find asset file array");return t[0]}(t);return p.default.parse(n)}(e);return t}(y.join(e,t)).catch(()=>null)));return o=n,t.reduce((e,t,n)=>(e[t]=o[n],e),{});var o}async getDiff(e,t){const n=[...Object.keys(e),...Object.keys(t)].filter(w),o=[];for(const r of n){const n=t[r]||0,a=e[r]||0,s=n.filter(e=>!a.includes(e));o.push({filename:r,dependency:n.join(", "),difference:s.join(", ")})}return o}}(async()=>{try{const e=t.getInput("repo-token"),r=n.getOctokit(e);await async function(e,n,r){const{number:a}=n.issue;try{t.debug("pr"+JSON.stringify(n.payload,null,2))}catch(e){}let s,i;if("push"==n.eventName)s=n.payload.before,i=n.payload.ref,console.log(`Pushed new commit on top of ${i} (${s})`);else{if("pull_request"!=n.eventName&&"pull_request_target"!=n.eventName)throw new Error(`Unsupported eventName in github.context: ${n.eventName}. Only "pull_request", "pull_request_target", and "push" triggered workflows are currently supported.`);{const e=n.payload.pull_request;s=e.base.sha,i=e.base.ref,console.log(`PR #${a} is targeted at ${i} (${i})`)}}t.getInput("cwd")&&process.chdir(t.getInput("cwd"));const l=new x({pattern:t.getInput("pattern")||"**/dist/**/*.asset.php",exclude:t.getInput("exclude")||"{**/*.map,**/node_modules/**}"}),p=t.getInput("build-script")||"build",w=process.cwd();let y=await d(c.default.resolve(w,"yarn.lock")),b=await d(c.default.resolve(w,"pnpm-lock.yaml")),$=await d(c.default.resolve(w,"package-lock.json")),k="npm",v="npm install";y?(v="yarn --frozen-lockfile",k="yarn"):b?(v="pnpm install --frozen-lockfile",k="pnpm"):$&&(v="npm ci"),t.startGroup("[current] Install Dependencies"),console.log(`Installing using ${v}`),await o.exec(v),t.endGroup(),t.startGroup(`[current] Build using ${k}`),console.log(`Building using ${k} run ${p}`),await o.exec(`${k} run ${p}`),t.endGroup(),await o.exec("git reset --hard");const _=await l.readFromDisk(w);t.startGroup("[base] Checkout target branch");try{if(!i)throw Error("missing context.payload.pull_request.base.ref");await o.exec(`git fetch -n origin ${i}`),console.log("successfully fetched base.ref")}catch(e){console.log("fetching base.ref failed",e.message);try{await o.exec(`git fetch -n origin ${s}`),console.log("successfully fetched base.sha")}catch(e){console.log("fetching base.sha failed",e.message);try{await o.exec("git fetch -n")}catch(e){console.log("fetch failed",e.message)}}}console.log("checking out and building base commit");try{if(!i)throw Error("missing context.payload.base.ref");await o.exec(`git reset --hard ${i}`)}catch(e){await o.exec(`git reset --hard ${s}`)}t.endGroup();const q=t.getInput("clean-script");q&&(t.startGroup(`[base] Cleanup via ${k} run ${q}`),await o.exec(`${k} run ${q}`),t.endGroup()),t.startGroup("[base] Install Dependencies"),y=await d(c.default.resolve(w,"yarn.lock")),b=await d(c.default.resolve(w,"pnpm-lock.yaml")),$=await d(c.default.resolve(w,"package-lock.json")),k="npm",v="npm install",y?(v="yarn --frozen-lockfile",k="yarn"):b?(v="pnpm install --frozen-lockfile",k="pnpm"):$&&(v="npm ci"),console.log(`Installing using ${v}`),await o.exec(v),t.endGroup(),t.startGroup(`[base] Build using ${k}`),await o.exec(`${k} run ${p}`),t.endGroup(),await o.exec("git reset --hard");const G=await l.readFromDisk(w),I=await l.getDiff(G,_);t.startGroup("Size Differences:");const D=await l.printSizes(I);console.log(D),t.endGroup();const N=function(e,{collapseUnchanged:t,omitUnchanged:n,minimumChangeThreshold:o}){let r=[],a=[];for(const s of e){const{filename:e,size:i,delta:c}=s,l=i-c,p=Math.abs(c)<o;if(p&&n)continue;const d=[`\`${e}\``,u.default(i),f(c,l),g(c,l)];p&&t?a.push(d):r.push(d)}let s=m(r);return 0!==a.length&&(s+=`\n\n<details><summary>‚ÑπÔ∏è <strong>View Unchanged</strong></summary>\n\n${m(a)}\n\n</details>\n\n`),s}(I,{collapseUnchanged:h(t.getInput("collapse-unchanged")),omitUnchanged:h(t.getInput("omit-unchanged"))});let j=!1;const E={...n.repo,issue_number:a},F={...E,body:N+'\n\n<a href="https://github.com/fabiankaegy/monitor-generated-wordpress-dependencies-action"><sub>monitor-generated-wordpress-dependencies-action</sub></a>'};if("pull_request"!==n.eventName&&"pull_request_target"!==n.eventName)console.log("No PR associated with this action run. Not posting a check or comment."),j=!1;else if(h(t.getInput("use-check")))if(r){const t=await async function(e,t){const n=await e.checks.create({...t.repo,name:"Monitor Generated WordPress Dependencies",head_sha:t.payload.pull_request.head.sha,status:"in_progress"});return async o=>{await e.checks.update({...t.repo,check_run_id:n.data.id,completed_at:(new Date).toISOString(),status:"completed",...o})}}(e,n);await t({conclusion:"success",output:{title:"Monitor Generated WordPress Dependencies Action",summary:N}})}else j=!0;else{let o;t.startGroup("Updating stats PR comment");try{const t=(await e.issues.listComments(E)).data;for(let e=t.length;e--;){const n=t[e];if("Bot"===n.user.type&&/<sub>monitor-generated-wordpress-dependencies-action/.test(n.body)){o=n.id;break}}}catch(e){console.log("Error checking for previous comments: "+e.message)}if(o){console.log(`Updating previous comment #${o}`);try{await e.issues.updateComment({...n.repo,comment_id:o,body:F.body})}catch(e){console.log("Error editing previous comment: "+e.message),o=null}}if(!o){console.log("Creating new comment");try{await e.issues.createComment(F)}catch(t){console.log(`Error creating comment: ${t.message}`),console.log("Submitting a PR review comment instead...");try{const t=n.issue;await e.pulls.createReview({owner:t.owner,repo:t.repo,pull_number:t.number,event:"COMMENT",body:F.body})}catch(e){console.log("Error creating PR review."),j=!0}}}t.endGroup()}j&&console.log(`\n\t\t\tError: monitor-generated-wordpress-dependencies-action was unable to comment on your PR.\n\t\t\tThis can happen for PR's originating from a fork without write permissions.\n\t\t\tYou can copy the size table directly into a comment using the markdown below:\n\t\t\t\n\n${F.body}\n\n\n\t\t`.replace(/^(\t|  )+/gm,"")),console.log("All done!")}(r,n.context,e)}catch(e){t.setFailed(e.message)}})();
